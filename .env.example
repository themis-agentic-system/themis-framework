# =============================================================================
# Themis Framework Environment Configuration
# =============================================================================

# -----------------------------------------------------------------------------
# LLM API Keys
# -----------------------------------------------------------------------------
# Anthropic Claude API key (REQUIRED for production)
# Get your key at: https://console.anthropic.com/
ANTHROPIC_API_KEY=replace-me

# OpenAI API key (optional, for future integrations)
OPENAI_API_KEY=replace-me

# -----------------------------------------------------------------------------
# Claude Advanced Features (2025)
# -----------------------------------------------------------------------------
# Enable extended thinking mode for deeper reasoning (recommended for DEA/LSA)
# Set to 'true' to enable, 'false' to disable
# Default: true
USE_EXTENDED_THINKING=true

# Enable 1-hour prompt caching for cost/latency optimization
# Can reduce costs by up to 90% and latency by up to 85%
# Default: true
USE_PROMPT_CACHING=true

# Enable code execution tool for computational tasks (damages calc, statistics)
# Useful for LDA agent financial calculations
# Pricing: 50 free hours/day, then $0.05/hour
# Default: false (enable when needed)
ENABLE_CODE_EXECUTION=false

# Claude model version
# Options: claude-sonnet-4-5, claude-opus-4
# Default: claude-sonnet-4-5
MODEL=claude-sonnet-4-5

# -----------------------------------------------------------------------------
# MCP (Model Context Protocol) Integration
# -----------------------------------------------------------------------------
# URLs and API keys for MCP servers (see .mcp.json for configuration)
# Legal research database MCP server
LEGAL_RESEARCH_MCP_URL=
LEGAL_RESEARCH_API_KEY=

# Document repository MCP server
DOCUMENT_REPO_MCP_URL=
DOCUMENT_REPO_API_KEY=

# Case management system MCP server
CASE_MGMT_MCP_URL=
CASE_MGMT_API_KEY=

# Workflow automation MCP server (Zapier, Make, etc.)
WORKFLOW_MCP_URL=
WORKFLOW_API_KEY=

# -----------------------------------------------------------------------------
# Database Configuration
# -----------------------------------------------------------------------------
# PostgreSQL connection URL for production
LEGAL_DB_URL=postgresql://user:pass@localhost:5432/themis

# SQLite database file for state persistence (default: orchestrator_state.db)
SQLITE_DB_PATH=orchestrator_state.db

# -----------------------------------------------------------------------------
# Themis API Authentication
# -----------------------------------------------------------------------------
# API key for authenticating requests to Themis API
# If set, all API endpoints require Bearer token authentication
# If not set, authentication is disabled (development mode only)
# Generate with: openssl rand -hex 32
THEMIS_API_KEY=your-secret-api-key-here

# -----------------------------------------------------------------------------
# Performance & Caching
# -----------------------------------------------------------------------------
# State cache TTL in seconds (default: 60)
# Increase for longer workflows, decrease for more frequent updates
CACHE_TTL_SECONDS=60

# Maximum request payload size in MB (default: 10)
MAX_PAYLOAD_SIZE_MB=10

# -----------------------------------------------------------------------------
# Logging & Observability
# -----------------------------------------------------------------------------
# Log level: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO

# Enable structured JSON logging (recommended for production)
JSON_LOGGING=true

# Prometheus metrics port (default: metrics available at /metrics endpoint)
# METRICS_PORT=9090

# -----------------------------------------------------------------------------
# Development & Testing
# -----------------------------------------------------------------------------
# Run in stub mode without API key (for testing/development)
# When ANTHROPIC_API_KEY is unset, Themis uses heuristic fallbacks
# STUB_MODE=true

# Enable debug mode (verbose logging, no caching)
# DEBUG=false
